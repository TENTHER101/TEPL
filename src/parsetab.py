
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND DATATYPE DATATYPE DATATYPE DATATYPE DIVIDE ELSE ELSEIF END EQ EXPECTING FROM GE GT IDENTIFIER IF INPUT LE LPAREN LT MINUS NE NO NO NUMBER OUTPUT PLUS POWER RANDOM RPAREN SET TEXT THEN TIMES TO YES YES\n    statements : statement\n               | statements statement\n    \n    end_statement : END IF\n    \n    statement : OUTPUT expression\n              | OUTPUT ask\n    \n    ask : TEXT EXPECTING INPUT AND DATATYPE\n    \n    random_statement : RANDOM DATATYPE FROM expression TO expression\n    \n    var_assignment : SET IDENTIFIER\n    \n    statement : var_assignment TO expression\n              | var_assignment \n              | var_assignment TO ask\n    \n    if_then : IF expression THEN statements\n    \n    statement : if_then end_statement\n              | if_then ELSE THEN statement end_statement\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression POWER expression\n    expression : LPAREN expression RPAREN\n    expression : YES\n               | NO\n    \n    comp_expr  : expression EQ expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression NE expression\n    \n    expression : comp_expr\n    expression : NUMBERexpression : IDENTIFIERexpression : random_statementexpression : TEXTexpression : INPUT'
    
_lr_action_items = {'OUTPUT':([0,1,2,4,8,9,10,12,13,14,15,16,17,18,19,22,25,27,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,65,66,68,],[3,3,-1,-10,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,-8,-33,-9,-11,3,-3,3,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,3,-14,-6,-7,]),'SET':([0,1,2,4,8,9,10,12,13,14,15,16,17,18,19,22,25,27,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,65,66,68,],[6,6,-1,-10,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,-8,-33,-9,-11,6,-3,6,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,6,-14,-6,-7,]),'IF':([0,1,2,4,8,9,10,12,13,14,15,16,17,18,19,22,24,25,27,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,65,66,68,],[7,7,-1,-10,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,45,-8,-33,-9,-11,7,-3,7,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,7,-14,-6,-7,]),'$end':([1,2,4,8,9,10,12,13,14,15,16,17,18,19,22,25,27,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,65,66,68,],[0,-1,-10,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,-8,-33,-9,-11,-3,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,-14,-6,-7,]),'ELSE':([2,4,5,8,9,10,12,13,14,15,16,17,18,19,22,25,27,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,62,65,66,68,],[-1,-10,23,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,-8,-33,-9,-11,-3,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,-12,-14,-6,-7,]),'END':([2,4,5,8,9,10,12,13,14,15,16,17,18,19,22,25,27,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,65,66,68,],[-1,-10,24,-2,-4,-5,-21,-22,-29,-30,-31,-32,-33,-34,-13,-8,-33,-9,-11,-3,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,24,-12,-14,-6,-7,]),'LPAREN':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'YES':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NO':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'IDENTIFIER':([3,6,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[16,25,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'TEXT':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[18,27,27,18,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'INPUT':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,40,60,67,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,59,19,19,]),'RANDOM':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TO':([4,12,13,14,15,16,17,19,25,27,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[21,-21,-22,-29,-30,-31,-32,-34,-8,-33,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,67,-7,]),'PLUS':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[28,-21,-22,-29,-30,-31,-32,-33,-34,28,-33,28,28,28,28,28,28,28,28,28,28,28,28,28,-20,28,28,]),'MINUS':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[29,-21,-22,-29,-30,-31,-32,-33,-34,29,-33,29,29,29,29,29,29,29,29,29,29,29,29,29,-20,29,29,]),'TIMES':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[30,-21,-22,-29,-30,-31,-32,-33,-34,30,-33,30,30,30,30,30,30,30,30,30,30,30,30,30,-20,30,30,]),'DIVIDE':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[31,-21,-22,-29,-30,-31,-32,-33,-34,31,-33,31,31,31,31,31,31,31,31,31,31,31,31,31,-20,31,31,]),'POWER':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[32,-21,-22,-29,-30,-31,-32,-33,-34,32,-33,32,32,32,32,32,32,32,32,32,32,32,32,32,-20,32,32,]),'EQ':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[33,-21,-22,-29,-30,-31,-32,-33,-34,33,-33,33,33,33,33,33,33,33,33,33,33,33,33,33,-20,33,33,]),'GT':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[34,-21,-22,-29,-30,-31,-32,-33,-34,34,-33,34,34,34,34,34,34,34,34,34,34,34,34,34,-20,34,34,]),'LT':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[35,-21,-22,-29,-30,-31,-32,-33,-34,35,-33,35,35,35,35,35,35,35,35,35,35,35,35,35,-20,35,35,]),'GE':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[36,-21,-22,-29,-30,-31,-32,-33,-34,36,-33,36,36,36,36,36,36,36,36,36,36,36,36,36,-20,36,36,]),'LE':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[37,-21,-22,-29,-30,-31,-32,-33,-34,37,-33,37,37,37,37,37,37,37,37,37,37,37,37,37,-20,37,37,]),'NE':([9,12,13,14,15,16,17,18,19,26,27,39,42,47,48,49,50,51,52,53,54,55,56,57,58,64,68,],[38,-21,-22,-29,-30,-31,-32,-33,-34,38,-33,38,38,38,38,38,38,38,38,38,38,38,38,38,-20,38,38,]),'THEN':([12,13,14,15,16,17,19,23,26,27,47,48,49,50,51,52,53,54,55,56,57,58,68,],[-21,-22,-29,-30,-31,-32,-34,44,46,-33,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,-7,]),'RPAREN':([12,13,14,15,16,17,19,27,39,47,48,49,50,51,52,53,54,55,56,57,58,68,],[-21,-22,-29,-30,-31,-32,-34,-33,58,-15,-16,-17,-18,-19,-23,-24,-25,-26,-27,-28,-20,-7,]),'EXPECTING':([18,],[40,]),'DATATYPE':([20,63,],[41,66,]),'FROM':([41,],[60,]),'AND':([59,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,46,],[1,62,]),'statement':([0,1,44,46,62,],[2,8,61,2,8,]),'var_assignment':([0,1,44,46,62,],[4,4,4,4,4,]),'if_then':([0,1,44,46,62,],[5,5,5,5,5,]),'expression':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[9,26,39,42,47,48,49,50,51,52,53,54,55,56,57,64,68,]),'ask':([3,21,],[10,43,]),'comp_expr':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'random_statement':([3,7,11,21,28,29,30,31,32,33,34,35,36,37,38,60,67,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'end_statement':([5,61,],[22,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','parser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',12),
  ('end_statement -> END IF','end_statement',2,'p_end_statement','parser.py',22),
  ('statement -> OUTPUT expression','statement',2,'p_statement_output','parser.py',29),
  ('statement -> OUTPUT ask','statement',2,'p_statement_output','parser.py',30),
  ('ask -> TEXT EXPECTING INPUT AND DATATYPE','ask',5,'p_ask_statement','parser.py',37),
  ('random_statement -> RANDOM DATATYPE FROM expression TO expression','random_statement',6,'p_random_statement','parser.py',44),
  ('var_assignment -> SET IDENTIFIER','var_assignment',2,'p_statement_var_assignment','parser.py',51),
  ('statement -> var_assignment TO expression','statement',3,'p_statement_assignment','parser.py',58),
  ('statement -> var_assignment','statement',1,'p_statement_assignment','parser.py',59),
  ('statement -> var_assignment TO ask','statement',3,'p_statement_assignment','parser.py',60),
  ('if_then -> IF expression THEN statements','if_then',4,'p_if_then','parser.py',70),
  ('statement -> if_then end_statement','statement',2,'p_statement_if','parser.py',77),
  ('statement -> if_then ELSE THEN statement end_statement','statement',5,'p_statement_if','parser.py',78),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',104),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',105),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',106),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',107),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',108),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',114),
  ('expression -> YES','expression',1,'p_expression_boolean','parser.py',120),
  ('expression -> NO','expression',1,'p_expression_boolean','parser.py',121),
  ('comp_expr -> expression EQ expression','comp_expr',3,'p_comp_expr','parser.py',128),
  ('comp_expr -> expression GT expression','comp_expr',3,'p_comp_expr','parser.py',129),
  ('comp_expr -> expression LT expression','comp_expr',3,'p_comp_expr','parser.py',130),
  ('comp_expr -> expression GE expression','comp_expr',3,'p_comp_expr','parser.py',131),
  ('comp_expr -> expression LE expression','comp_expr',3,'p_comp_expr','parser.py',132),
  ('comp_expr -> expression NE expression','comp_expr',3,'p_comp_expr','parser.py',133),
  ('expression -> comp_expr','expression',1,'p_expression_comp_expr','parser.py',140),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',146),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',151),
  ('expression -> random_statement','expression',1,'p_expression_random','parser.py',156),
  ('expression -> TEXT','expression',1,'p_expression_text','parser.py',161),
  ('expression -> INPUT','expression',1,'p_expression_input','parser.py',166),
]
