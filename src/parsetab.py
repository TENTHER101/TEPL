
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEDIVIDE ID LPAREN MINUS MULTIPLY NUMBER PLUS RPAREN SET TO\n    statement : SET ID TO expression\n    expression : NUMBER PLUS NUMBER\n                  | NUMBER MINUS NUMBER\n                  | NUMBER MULTIPLY NUMBER\n                  | NUMBER DIVIDE NUMBERexpression : NUMBERexpression : LPAREN expression RPAREN\n    expression : ID\n    '
    
_lr_action_items = {'SET':([0,],[2,]),'$end':([1,5,6,7,14,15,16,17,18,],[0,-8,-1,-6,-2,-3,-4,-5,-7,]),'ID':([2,4,8,],[3,5,5,]),'TO':([3,],[4,]),'NUMBER':([4,8,9,10,11,12,],[7,7,14,15,16,17,]),'LPAREN':([4,8,],[8,8,]),'RPAREN':([5,7,13,14,15,16,17,18,],[-8,-6,18,-2,-3,-4,-5,-7,]),'PLUS':([7,],[9,]),'MINUS':([7,],[10,]),'MULTIPLY':([7,],[11,]),'DIVIDE':([7,],[12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([4,8,],[6,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> SET ID TO expression','statement',4,'p_statement_assignvar','tepl.py',128),
  ('expression -> NUMBER PLUS NUMBER','expression',3,'p_expression_binop','tepl.py',133),
  ('expression -> NUMBER MINUS NUMBER','expression',3,'p_expression_binop','tepl.py',134),
  ('expression -> NUMBER MULTIPLY NUMBER','expression',3,'p_expression_binop','tepl.py',135),
  ('expression -> NUMBER DIVIDE NUMBER','expression',3,'p_expression_binop','tepl.py',136),
  ('expression -> NUMBER','expression',1,'p_expression_number','tepl.py',143),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','tepl.py',147),
  ('expression -> ID','expression',1,'p_expression_id','tepl.py',152),
]
