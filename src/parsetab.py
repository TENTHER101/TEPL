
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND DATATYPE DIVIDE EQ EXPECTING FROM GE GT IDENTIFIER IF INPUT LE LPAREN LT MINUS NE NO NUMBER OUTPUT PLUS POWER RANDOM RPAREN SET TEXT THEN TIMES TO YES\n    statements : statement\n               | statements statement\n    \n    statement : OUTPUT expression\n              | OUTPUT ask\n    \n    ask : TEXT EXPECTING INPUT AND DATATYPE\n    \n    random_statement : RANDOM DATATYPE FROM expression TO expression\n    \n    var_assignment : SET IDENTIFIER\n    \n    statement : var_assignment TO expression\n              | var_assignment \n              | var_assignment TO ask\n    \n    statement : IF comp_expr THEN statement\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression POWER expression\n    expression : LPAREN expression RPAREN\n    expression : YES\n               | NO\n    \n    comp_expr  : expression EQ expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression NE expression\n    \n    expression : comp_expr\n    expression : NUMBERexpression : IDENTIFIERexpression : random_statementexpression : TEXTexpression : INPUT'
    
_lr_action_items = {'OUTPUT':([0,1,2,4,7,8,9,11,12,13,14,15,16,17,18,23,24,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,59,61,],[3,3,-1,-9,-2,-3,-4,-18,-19,-26,-27,-28,-29,-30,-31,-30,-7,-8,-10,3,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-11,-5,-6,]),'IF':([0,1,2,4,7,8,9,11,12,13,14,15,16,17,18,23,24,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,59,61,],[5,5,-1,-9,-2,-3,-4,-18,-19,-26,-27,-28,-29,-30,-31,-30,-7,-8,-10,5,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-11,-5,-6,]),'SET':([0,1,2,4,7,8,9,11,12,13,14,15,16,17,18,23,24,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,59,61,],[6,6,-1,-9,-2,-3,-4,-18,-19,-26,-27,-28,-29,-30,-31,-30,-7,-8,-10,6,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-11,-5,-6,]),'$end':([1,2,4,7,8,9,11,12,13,14,15,16,17,18,23,24,39,40,42,43,44,45,46,47,48,49,50,51,52,53,56,59,61,],[0,-1,-9,-2,-3,-4,-18,-19,-26,-27,-28,-29,-30,-31,-30,-7,-8,-10,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-11,-5,-6,]),'LPAREN':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'YES':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NO':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NUMBER':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IDENTIFIER':([3,5,6,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[15,15,24,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'TEXT':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[17,23,23,17,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'INPUT':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,37,55,60,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,54,18,18,]),'RANDOM':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TO':([4,11,12,13,14,15,16,18,23,24,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[20,-18,-19,-26,-27,-28,-29,-31,-30,-7,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,60,-6,]),'PLUS':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[25,-18,-19,-26,-27,-28,-29,-30,-31,-26,25,-30,25,25,25,25,25,25,25,25,25,25,25,25,25,-17,25,25,]),'MINUS':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[26,-18,-19,-26,-27,-28,-29,-30,-31,-26,26,-30,26,26,26,26,26,26,26,26,26,26,26,26,26,-17,26,26,]),'TIMES':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[27,-18,-19,-26,-27,-28,-29,-30,-31,-26,27,-30,27,27,27,27,27,27,27,27,27,27,27,27,27,-17,27,27,]),'DIVIDE':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[28,-18,-19,-26,-27,-28,-29,-30,-31,-26,28,-30,28,28,28,28,28,28,28,28,28,28,28,28,28,-17,28,28,]),'POWER':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[29,-18,-19,-26,-27,-28,-29,-30,-31,-26,29,-30,29,29,29,29,29,29,29,29,29,29,29,29,29,-17,29,29,]),'EQ':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[30,-18,-19,-26,-27,-28,-29,-30,-31,-26,30,-30,30,30,30,30,30,30,30,30,30,30,30,30,30,-17,30,30,]),'GT':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[31,-18,-19,-26,-27,-28,-29,-30,-31,-26,31,-30,31,31,31,31,31,31,31,31,31,31,31,31,31,-17,31,31,]),'LT':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[32,-18,-19,-26,-27,-28,-29,-30,-31,-26,32,-30,32,32,32,32,32,32,32,32,32,32,32,32,32,-17,32,32,]),'GE':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[33,-18,-19,-26,-27,-28,-29,-30,-31,-26,33,-30,33,33,33,33,33,33,33,33,33,33,33,33,33,-17,33,33,]),'LE':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[34,-18,-19,-26,-27,-28,-29,-30,-31,-26,34,-30,34,34,34,34,34,34,34,34,34,34,34,34,34,-17,34,34,]),'NE':([8,11,12,13,14,15,16,17,18,21,22,23,36,39,42,43,44,45,46,47,48,49,50,51,52,53,58,61,],[35,-18,-19,-26,-27,-28,-29,-30,-31,-26,35,-30,35,35,35,35,35,35,35,35,35,35,35,35,35,-17,35,35,]),'RPAREN':([11,12,13,14,15,16,18,23,36,42,43,44,45,46,47,48,49,50,51,52,53,61,],[-18,-19,-26,-27,-28,-29,-31,-30,53,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-6,]),'THEN':([11,12,13,14,15,16,18,21,23,42,43,44,45,46,47,48,49,50,51,52,53,61,],[-18,-19,-26,-27,-28,-29,-31,41,-30,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-17,-6,]),'EXPECTING':([17,],[37,]),'DATATYPE':([19,57,],[38,59,]),'FROM':([38,],[55,]),'AND':([54,],[57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,41,],[2,7,56,]),'var_assignment':([0,1,41,],[4,4,4,]),'expression':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[8,22,36,39,42,43,44,45,46,47,48,49,50,51,52,58,61,]),'ask':([3,20,],[9,40,]),'comp_expr':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[13,21,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'random_statement':([3,5,10,20,25,26,27,28,29,30,31,32,33,34,35,55,60,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','parser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',12),
  ('statement -> OUTPUT expression','statement',2,'p_statement_output','parser.py',21),
  ('statement -> OUTPUT ask','statement',2,'p_statement_output','parser.py',22),
  ('ask -> TEXT EXPECTING INPUT AND DATATYPE','ask',5,'p_ask_statement','parser.py',29),
  ('random_statement -> RANDOM DATATYPE FROM expression TO expression','random_statement',6,'p_random_statement','parser.py',36),
  ('var_assignment -> SET IDENTIFIER','var_assignment',2,'p_statement_var_assignment','parser.py',43),
  ('statement -> var_assignment TO expression','statement',3,'p_statement_assignment','parser.py',50),
  ('statement -> var_assignment','statement',1,'p_statement_assignment','parser.py',51),
  ('statement -> var_assignment TO ask','statement',3,'p_statement_assignment','parser.py',52),
  ('statement -> IF comp_expr THEN statement','statement',4,'p_statement_if','parser.py',62),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',76),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',77),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',78),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',79),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',80),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',86),
  ('expression -> YES','expression',1,'p_expression_boolean','parser.py',92),
  ('expression -> NO','expression',1,'p_expression_boolean','parser.py',93),
  ('comp_expr -> expression EQ expression','comp_expr',3,'p_comp_expr','parser.py',100),
  ('comp_expr -> expression GT expression','comp_expr',3,'p_comp_expr','parser.py',101),
  ('comp_expr -> expression LT expression','comp_expr',3,'p_comp_expr','parser.py',102),
  ('comp_expr -> expression GE expression','comp_expr',3,'p_comp_expr','parser.py',103),
  ('comp_expr -> expression LE expression','comp_expr',3,'p_comp_expr','parser.py',104),
  ('comp_expr -> expression NE expression','comp_expr',3,'p_comp_expr','parser.py',105),
  ('expression -> comp_expr','expression',1,'p_expression_comp_expr','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',118),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',123),
  ('expression -> random_statement','expression',1,'p_expression_random','parser.py',128),
  ('expression -> TEXT','expression',1,'p_expression_text','parser.py',133),
  ('expression -> INPUT','expression',1,'p_expression_input','parser.py',138),
]
