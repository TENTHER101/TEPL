
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND DATATYPE DATATYPE DATATYPE DATATYPE DATATYPE DIVIDE DO ELSE ELSEIF END EQ EXIT EXPECTING FOREVER FROM FUNCTION GE GT IDENTIFIER IF IN INPUT LE LENGTH LOOP LPAREN LT MEANS MINUS NE NO NO NOT NUMBER OF OR OUTPUT PAUSE PLUS POWER RANDOM REPEAT RETURN RPAREN SET TEXT THEN TIMES TO TYPE UNTIL WHILE YES YES\n    statements : statement\n               | statements statement\n    \n    end_statement : END\n    \n    statement : OUTPUT expression\n              | OUTPUT ask\n    \n    ask : TEXT EXPECTING INPUT AND DATATYPE\n    \n    random_statement : RANDOM DATATYPE FROM expression TO expression\n    \n    var_assignment : SET IDENTIFIER\n    \n    statement : var_assignment TO expression\n              | var_assignment \n              | var_assignment TO ask\n              | var_assignment TO items type_stmt\n    \n    if_then : IF expression THEN statements\n    \n    statement : if_then end_statement\n              | if_then ELSE THEN statements end_statement\n    \n    statement : REPEAT statements UNTIL expression\n    \n    statement : PAUSE expression\n    \n    type_stmt : TYPE DATATYPE\n    \n    statement : FUNCTION IDENTIFIER MEANS statements end_statement\n    \n    statement : WHILE expression DO statements end_statement\n    \n    statement : FOREVER DO statements end_statement\n    \n    statement : EXIT LOOP\n    \n    expression : DATATYPE FROM expression TO expression FROM expression\n    \n    expression : LENGTH OF expression\n    \n    items : expression\n          | items expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression POWER expression\n    expression : LPAREN expression RPAREN\n    expression : YES\n               | NO\n    \n    comp_expr  : expression EQ expression\n               | expression GT expression\n               | expression LT expression\n               | expression GE expression\n               | expression LE expression\n               | expression NE expression\n               | comp_expr AND comp_expr\n               | comp_expr OR comp_expr\n               | NOT expression\n               | expression IN expression\n    \n    expression : comp_expr\n    expression : NUMBERexpression : IDENTIFIERexpression : random_statementexpression : TEXTexpression : INPUT'
    
_lr_action_items = {'OUTPUT':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[3,3,-1,-10,3,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,3,-17,-49,3,-22,-8,-43,-9,-11,3,3,3,3,3,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,3,-16,3,3,-21,3,-18,-15,-19,-20,-6,-7,-23,]),'REPEAT':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[6,6,-1,-10,6,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,6,-17,-49,6,-22,-8,-43,-9,-11,6,6,6,6,6,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,6,-16,6,6,-21,6,-18,-15,-19,-20,-6,-7,-23,]),'PAUSE':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[7,7,-1,-10,7,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,7,-17,-49,7,-22,-8,-43,-9,-11,7,7,7,7,7,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,7,-16,7,7,-21,7,-18,-15,-19,-20,-6,-7,-23,]),'FUNCTION':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[8,8,-1,-10,8,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,8,-17,-49,8,-22,-8,-43,-9,-11,8,8,8,8,8,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,8,-16,8,8,-21,8,-18,-15,-19,-20,-6,-7,-23,]),'WHILE':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[9,9,-1,-10,9,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,9,-17,-49,9,-22,-8,-43,-9,-11,9,9,9,9,9,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,9,-16,9,9,-21,9,-18,-15,-19,-20,-6,-7,-23,]),'FOREVER':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[10,10,-1,-10,10,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,10,-17,-49,10,-22,-8,-43,-9,-11,10,10,10,10,10,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,10,-16,10,10,-21,10,-18,-15,-19,-20,-6,-7,-23,]),'EXIT':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[11,11,-1,-10,11,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,11,-17,-49,11,-22,-8,-43,-9,-11,11,11,11,11,11,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,11,-16,11,11,-21,11,-18,-15,-19,-20,-6,-7,-23,]),'SET':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[12,12,-1,-10,12,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,12,-17,-49,12,-22,-8,-43,-9,-11,12,12,12,12,12,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,12,-16,12,12,-21,12,-18,-15,-19,-20,-6,-7,-23,]),'IF':([0,1,2,4,6,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,39,40,41,61,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[13,13,-1,-10,13,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,13,-17,-49,13,-22,-8,-43,-9,-11,13,13,13,13,13,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,13,-16,13,13,-21,13,-18,-15,-19,-20,-6,-7,-23,]),'$end':([1,2,4,14,15,16,20,21,22,23,24,25,26,27,31,33,35,36,40,41,61,63,64,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,96,99,104,105,106,107,109,112,113,],[0,-1,-10,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,-17,-49,-22,-8,-43,-9,-11,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,-16,-21,-18,-15,-19,-20,-6,-7,-23,]),'UNTIL':([2,4,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,40,41,61,63,64,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,96,99,104,105,106,107,109,112,113,],[-1,-10,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,67,-17,-49,-22,-8,-43,-9,-11,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,-16,-21,-18,-15,-19,-20,-6,-7,-23,]),'END':([2,4,5,14,15,16,20,21,22,23,24,25,26,27,31,33,35,36,40,41,61,63,64,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,95,96,97,98,99,100,104,105,106,107,109,112,113,],[-1,-10,33,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,-17,-49,-22,-8,-43,-9,-11,33,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,33,-16,33,33,-21,-13,-18,-15,-19,-20,-6,-7,-23,]),'ELSE':([2,4,5,14,15,16,20,21,22,23,24,25,26,27,31,33,35,36,40,41,61,63,64,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,92,96,99,100,104,105,106,107,109,112,113,],[-1,-10,32,-2,-4,-5,-33,-34,-45,-46,-47,-48,-49,-50,-14,-3,-17,-49,-22,-8,-43,-9,-11,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-12,-16,-21,-13,-18,-15,-19,-20,-6,-7,-23,]),'DATATYPE':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,29,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,94,101,102,110,111,112,113,],[17,17,17,17,17,-33,-34,-45,-46,-47,-48,-49,-50,17,62,17,-49,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-43,-25,17,17,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,17,-26,104,17,109,17,17,-7,-23,]),'LENGTH':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[18,18,18,18,18,-33,-34,-45,-46,-47,-48,-49,-50,18,18,-49,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-43,-25,18,18,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,18,-26,18,18,18,-7,-23,]),'LPAREN':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[19,19,19,19,19,-33,-34,-45,-46,-47,-48,-49,-50,19,19,-49,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-43,-25,19,19,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,19,-26,19,19,19,-7,-23,]),'YES':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[20,20,20,20,20,-33,-34,-45,-46,-47,-48,-49,-50,20,20,-49,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-43,-25,20,20,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,20,-26,20,20,20,-7,-23,]),'NO':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[21,21,21,21,21,-33,-34,-45,-46,-47,-48,-49,-50,21,21,-49,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-43,-25,21,21,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,21,-26,21,21,21,-7,-23,]),'NUMBER':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[23,23,23,23,23,-33,-34,-45,-46,-47,-48,-49,-50,23,23,-49,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-43,-25,23,23,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,23,-26,23,23,23,-7,-23,]),'IDENTIFIER':([3,7,8,9,12,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[24,24,37,24,41,24,24,-33,-34,-45,-46,-47,-48,-49,-50,24,24,-49,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-43,-25,24,24,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,24,-26,24,24,24,-7,-23,]),'TEXT':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[26,36,36,36,36,-33,-34,-45,-46,-47,-48,-49,-50,36,26,-49,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-43,-25,36,36,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,36,-26,36,36,36,-7,-23,]),'INPUT':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[27,27,27,27,27,-33,-34,-45,-46,-47,-48,-49,-50,27,27,-49,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,90,-43,-25,27,27,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,27,-26,27,27,27,-7,-23,]),'NOT':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[28,28,28,28,28,-33,-34,-45,-46,-47,-48,-49,-50,28,28,-49,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-43,-25,28,28,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,28,-26,28,28,28,-7,-23,]),'RANDOM':([3,7,9,13,19,20,21,22,23,24,25,26,27,28,30,36,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,63,65,67,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,91,93,101,110,111,112,113,],[29,29,29,29,29,-33,-34,-45,-46,-47,-48,-49,-50,29,29,-49,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-43,-25,29,29,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,29,-26,29,29,29,-7,-23,]),'TO':([4,20,21,22,23,24,25,27,36,41,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,103,112,113,],[30,-33,-34,-45,-46,-47,-48,-50,-49,-8,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,101,-24,-32,-41,-42,110,-7,-23,]),'DO':([10,20,21,22,23,24,25,27,36,38,61,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,112,113,],[39,-33,-34,-45,-46,-47,-48,-50,-49,69,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-7,-23,]),'LOOP':([11,],[40,]),'PLUS':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[43,-33,-34,-45,-46,-47,-48,-49,-50,43,-49,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-41,43,-42,43,43,43,43,43,43,]),'MINUS':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[44,-33,-34,-45,-46,-47,-48,-49,-50,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-32,-41,44,-42,44,44,44,44,44,44,]),'TIMES':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[45,-33,-34,-45,-46,-47,-48,-49,-50,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-32,-41,45,-42,45,45,45,45,45,45,]),'DIVIDE':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[46,-33,-34,-45,-46,-47,-48,-49,-50,46,-49,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-32,-41,46,-42,46,46,46,46,46,46,]),'POWER':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[47,-33,-34,-45,-46,-47,-48,-49,-50,47,-49,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-32,-41,47,-42,47,47,47,47,47,47,]),'EQ':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[48,-33,-34,-45,-46,-47,-48,-49,-50,48,-49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-32,-41,48,-42,48,48,48,48,48,48,]),'GT':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[49,-33,-34,-45,-46,-47,-48,-49,-50,49,-49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-32,-41,49,-42,49,49,49,49,49,49,]),'LT':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[50,-33,-34,-45,-46,-47,-48,-49,-50,50,-49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-32,-41,50,-42,50,50,50,50,50,50,]),'GE':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[51,-33,-34,-45,-46,-47,-48,-49,-50,51,-49,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-32,-41,51,-42,51,51,51,51,51,51,]),'LE':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[52,-33,-34,-45,-46,-47,-48,-49,-50,52,-49,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-32,-41,52,-42,52,52,52,52,52,52,]),'NE':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[53,-33,-34,-45,-46,-47,-48,-49,-50,53,-49,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-32,-41,53,-42,53,53,53,53,53,53,]),'IN':([15,20,21,22,23,24,25,26,27,35,36,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,96,103,108,112,113,],[54,-33,-34,-45,-46,-47,-48,-49,-50,54,-49,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-32,-41,54,-42,54,54,54,54,54,54,]),'FROM':([17,20,21,22,23,24,25,27,36,61,62,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,108,112,113,],[55,-33,-34,-45,-46,-47,-48,-50,-49,-43,91,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,111,-7,-23,]),'OF':([18,],[56,]),'THEN':([20,21,22,23,24,25,27,32,36,42,61,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,112,113,],[-33,-34,-45,-46,-47,-48,-50,66,-49,71,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-7,-23,]),'RPAREN':([20,21,22,23,24,25,27,36,57,61,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,112,113,],[-33,-34,-45,-46,-47,-48,-50,-49,86,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-7,-23,]),'AND':([20,21,22,23,24,25,27,36,61,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,90,112,113,],[-33,-34,58,-46,-47,-48,-50,-49,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,58,58,102,-7,-23,]),'OR':([20,21,22,23,24,25,27,36,61,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,112,113,],[-33,-34,59,-46,-47,-48,-50,-49,-43,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,59,59,-7,-23,]),'TYPE':([20,21,22,23,24,25,26,27,36,61,63,65,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,89,93,112,113,],[-33,-34,-45,-46,-47,-48,-49,-50,-49,-43,-25,94,-27,-28,-29,-30,-31,-35,-36,-37,-38,-39,-40,-44,-24,-32,-41,-42,-26,-7,-23,]),'EXPECTING':([26,],[60,]),'MEANS':([37,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,6,39,66,68,69,71,],[1,34,70,95,97,98,100,]),'statement':([0,1,6,34,39,66,68,69,70,71,95,97,98,100,],[2,14,2,14,2,2,2,2,14,2,14,14,14,14,]),'var_assignment':([0,1,6,34,39,66,68,69,70,71,95,97,98,100,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if_then':([0,1,6,34,39,66,68,69,70,71,95,97,98,100,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([3,7,9,13,19,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,65,67,91,101,110,111,],[15,35,38,42,57,61,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,88,93,96,103,108,112,113,]),'ask':([3,30,],[16,64,]),'comp_expr':([3,7,9,13,19,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,65,67,91,101,110,111,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,87,89,22,22,22,22,22,22,]),'random_statement':([3,7,9,13,19,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,65,67,91,101,110,111,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'end_statement':([5,70,95,97,98,],[31,99,105,106,107,]),'items':([30,],[65,]),'type_stmt':([65,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','parser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',12),
  ('end_statement -> END','end_statement',1,'p_end_statement','parser.py',22),
  ('statement -> OUTPUT expression','statement',2,'p_statement_output','parser.py',29),
  ('statement -> OUTPUT ask','statement',2,'p_statement_output','parser.py',30),
  ('ask -> TEXT EXPECTING INPUT AND DATATYPE','ask',5,'p_ask_statement','parser.py',37),
  ('random_statement -> RANDOM DATATYPE FROM expression TO expression','random_statement',6,'p_random_statement','parser.py',44),
  ('var_assignment -> SET IDENTIFIER','var_assignment',2,'p_statement_var_assignment','parser.py',51),
  ('statement -> var_assignment TO expression','statement',3,'p_statement_assignment','parser.py',58),
  ('statement -> var_assignment','statement',1,'p_statement_assignment','parser.py',59),
  ('statement -> var_assignment TO ask','statement',3,'p_statement_assignment','parser.py',60),
  ('statement -> var_assignment TO items type_stmt','statement',4,'p_statement_assignment','parser.py',61),
  ('if_then -> IF expression THEN statements','if_then',4,'p_if_then','parser.py',71),
  ('statement -> if_then end_statement','statement',2,'p_statement_if','parser.py',78),
  ('statement -> if_then ELSE THEN statements end_statement','statement',5,'p_statement_if','parser.py',79),
  ('statement -> REPEAT statements UNTIL expression','statement',4,'p_statement_repeat','parser.py',93),
  ('statement -> PAUSE expression','statement',2,'p_statement_pause','parser.py',100),
  ('type_stmt -> TYPE DATATYPE','type_stmt',2,'p_statement_type','parser.py',107),
  ('statement -> FUNCTION IDENTIFIER MEANS statements end_statement','statement',5,'p_statement_function','parser.py',114),
  ('statement -> WHILE expression DO statements end_statement','statement',5,'p_statement_while','parser.py',121),
  ('statement -> FOREVER DO statements end_statement','statement',4,'p_statement_forever','parser.py',128),
  ('statement -> EXIT LOOP','statement',2,'p_statement_exit','parser.py',135),
  ('expression -> DATATYPE FROM expression TO expression FROM expression','expression',7,'p_expression_substring','parser.py',142),
  ('expression -> LENGTH OF expression','expression',3,'p_expression_length','parser.py',152),
  ('items -> expression','items',1,'p_expressions','parser.py',159),
  ('items -> items expression','items',2,'p_expressions','parser.py',160),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',170),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',171),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',172),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',173),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',174),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',180),
  ('expression -> YES','expression',1,'p_expression_boolean','parser.py',186),
  ('expression -> NO','expression',1,'p_expression_boolean','parser.py',187),
  ('comp_expr -> expression EQ expression','comp_expr',3,'p_comp_expr','parser.py',194),
  ('comp_expr -> expression GT expression','comp_expr',3,'p_comp_expr','parser.py',195),
  ('comp_expr -> expression LT expression','comp_expr',3,'p_comp_expr','parser.py',196),
  ('comp_expr -> expression GE expression','comp_expr',3,'p_comp_expr','parser.py',197),
  ('comp_expr -> expression LE expression','comp_expr',3,'p_comp_expr','parser.py',198),
  ('comp_expr -> expression NE expression','comp_expr',3,'p_comp_expr','parser.py',199),
  ('comp_expr -> comp_expr AND comp_expr','comp_expr',3,'p_comp_expr','parser.py',200),
  ('comp_expr -> comp_expr OR comp_expr','comp_expr',3,'p_comp_expr','parser.py',201),
  ('comp_expr -> NOT expression','comp_expr',2,'p_comp_expr','parser.py',202),
  ('comp_expr -> expression IN expression','comp_expr',3,'p_comp_expr','parser.py',203),
  ('expression -> comp_expr','expression',1,'p_expression_comp_expr','parser.py',213),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',219),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',224),
  ('expression -> random_statement','expression',1,'p_expression_random','parser.py',229),
  ('expression -> TEXT','expression',1,'p_expression_text','parser.py',234),
  ('expression -> INPUT','expression',1,'p_expression_input','parser.py',239),
]
