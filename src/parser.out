Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TEXT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> OUTPUT expression
Rule 2     type_statement -> TYPE DATATYPE
Rule 3     var_assignment -> SET IDENTIFIER
Rule 4     statement -> var_assignment TO expression
Rule 5     statement -> var_assignment
Rule 6     expression -> expression PLUS expression
Rule 7     expression -> expression MINUS expression
Rule 8     expression -> expression TIMES expression
Rule 9     expression -> expression DIVIDE expression
Rule 10    expression -> expression POWER expression
Rule 11    expression -> LPAREN expression RPAREN
Rule 12    expression -> YES
Rule 13    expression -> NO
Rule 14    expression -> expression EQ expression
Rule 15    expression -> expression GT expression
Rule 16    expression -> expression LT expression
Rule 17    expression -> expression GE expression
Rule 18    expression -> expression LE expression
Rule 19    expression -> expression NE expression
Rule 20    expression -> NUMBER
Rule 21    expression -> IDENTIFIER

Terminals, with rules where they appear

DATATYPE             : 2
DIVIDE               : 9
EQ                   : 14
GE                   : 17
GT                   : 15
IDENTIFIER           : 3 21
LE                   : 18
LPAREN               : 11
LT                   : 16
MINUS                : 7
NE                   : 19
NO                   : 13
NUMBER               : 20
OUTPUT               : 1
PLUS                 : 6
POWER                : 10
RPAREN               : 11
SET                  : 3
TEXT                 : 
TIMES                : 8
TO                   : 4
TYPE                 : 2
YES                  : 12
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 6 7 7 8 8 9 9 10 10 11 14 14 15 15 16 16 17 17 18 18 19 19
statement            : 0
type_statement       : 
var_assignment       : 4 5

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . OUTPUT expression
    (4) statement -> . var_assignment TO expression
    (5) statement -> . var_assignment
    (3) var_assignment -> . SET IDENTIFIER

    OUTPUT          shift and go to state 2
    SET             shift and go to state 4

    statement                      shift and go to state 1
    var_assignment                 shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> OUTPUT . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 5

state 3

    (4) statement -> var_assignment . TO expression
    (5) statement -> var_assignment .

    TO              shift and go to state 11
    $end            reduce using rule 5 (statement -> var_assignment .)


state 4

    (3) var_assignment -> SET . IDENTIFIER

    IDENTIFIER      shift and go to state 12


state 5

    (1) statement -> OUTPUT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    $end            reduce using rule 1 (statement -> OUTPUT expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23


state 6

    (11) expression -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 24

state 7

    (12) expression -> YES .

    PLUS            reduce using rule 12 (expression -> YES .)
    MINUS           reduce using rule 12 (expression -> YES .)
    TIMES           reduce using rule 12 (expression -> YES .)
    DIVIDE          reduce using rule 12 (expression -> YES .)
    POWER           reduce using rule 12 (expression -> YES .)
    EQ              reduce using rule 12 (expression -> YES .)
    GT              reduce using rule 12 (expression -> YES .)
    LT              reduce using rule 12 (expression -> YES .)
    GE              reduce using rule 12 (expression -> YES .)
    LE              reduce using rule 12 (expression -> YES .)
    NE              reduce using rule 12 (expression -> YES .)
    $end            reduce using rule 12 (expression -> YES .)
    RPAREN          reduce using rule 12 (expression -> YES .)


state 8

    (13) expression -> NO .

    PLUS            reduce using rule 13 (expression -> NO .)
    MINUS           reduce using rule 13 (expression -> NO .)
    TIMES           reduce using rule 13 (expression -> NO .)
    DIVIDE          reduce using rule 13 (expression -> NO .)
    POWER           reduce using rule 13 (expression -> NO .)
    EQ              reduce using rule 13 (expression -> NO .)
    GT              reduce using rule 13 (expression -> NO .)
    LT              reduce using rule 13 (expression -> NO .)
    GE              reduce using rule 13 (expression -> NO .)
    LE              reduce using rule 13 (expression -> NO .)
    NE              reduce using rule 13 (expression -> NO .)
    $end            reduce using rule 13 (expression -> NO .)
    RPAREN          reduce using rule 13 (expression -> NO .)


state 9

    (20) expression -> NUMBER .

    PLUS            reduce using rule 20 (expression -> NUMBER .)
    MINUS           reduce using rule 20 (expression -> NUMBER .)
    TIMES           reduce using rule 20 (expression -> NUMBER .)
    DIVIDE          reduce using rule 20 (expression -> NUMBER .)
    POWER           reduce using rule 20 (expression -> NUMBER .)
    EQ              reduce using rule 20 (expression -> NUMBER .)
    GT              reduce using rule 20 (expression -> NUMBER .)
    LT              reduce using rule 20 (expression -> NUMBER .)
    GE              reduce using rule 20 (expression -> NUMBER .)
    LE              reduce using rule 20 (expression -> NUMBER .)
    NE              reduce using rule 20 (expression -> NUMBER .)
    $end            reduce using rule 20 (expression -> NUMBER .)
    RPAREN          reduce using rule 20 (expression -> NUMBER .)


state 10

    (21) expression -> IDENTIFIER .

    PLUS            reduce using rule 21 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 21 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 21 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 21 (expression -> IDENTIFIER .)
    POWER           reduce using rule 21 (expression -> IDENTIFIER .)
    EQ              reduce using rule 21 (expression -> IDENTIFIER .)
    GT              reduce using rule 21 (expression -> IDENTIFIER .)
    LT              reduce using rule 21 (expression -> IDENTIFIER .)
    GE              reduce using rule 21 (expression -> IDENTIFIER .)
    LE              reduce using rule 21 (expression -> IDENTIFIER .)
    NE              reduce using rule 21 (expression -> IDENTIFIER .)
    $end            reduce using rule 21 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER .)


state 11

    (4) statement -> var_assignment TO . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 25

state 12

    (3) var_assignment -> SET IDENTIFIER .

    TO              reduce using rule 3 (var_assignment -> SET IDENTIFIER .)
    $end            reduce using rule 3 (var_assignment -> SET IDENTIFIER .)


state 13

    (6) expression -> expression PLUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 26

state 14

    (7) expression -> expression MINUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 27

state 15

    (8) expression -> expression TIMES . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 28

state 16

    (9) expression -> expression DIVIDE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 29

state 17

    (10) expression -> expression POWER . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 30

state 18

    (14) expression -> expression EQ . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 31

state 19

    (15) expression -> expression GT . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 32

state 20

    (16) expression -> expression LT . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 33

state 21

    (17) expression -> expression GE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 34

state 22

    (18) expression -> expression LE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 35

state 23

    (19) expression -> expression NE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression POWER expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . YES
    (13) expression -> . NO
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression LT expression
    (17) expression -> . expression GE expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression NE expression
    (20) expression -> . NUMBER
    (21) expression -> . IDENTIFIER

    LPAREN          shift and go to state 6
    YES             shift and go to state 7
    NO              shift and go to state 8
    NUMBER          shift and go to state 9
    IDENTIFIER      shift and go to state 10

    expression                     shift and go to state 36

state 24

    (11) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23


state 25

    (4) statement -> var_assignment TO expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    $end            reduce using rule 4 (statement -> var_assignment TO expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23


state 26

    (6) expression -> expression PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    PLUS            reduce using rule 6 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 6 (expression -> expression PLUS expression .)
    EQ              reduce using rule 6 (expression -> expression PLUS expression .)
    GT              reduce using rule 6 (expression -> expression PLUS expression .)
    LT              reduce using rule 6 (expression -> expression PLUS expression .)
    GE              reduce using rule 6 (expression -> expression PLUS expression .)
    LE              reduce using rule 6 (expression -> expression PLUS expression .)
    NE              reduce using rule 6 (expression -> expression PLUS expression .)
    $end            reduce using rule 6 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17

  ! TIMES           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EQ              [ shift and go to state 18 ]
  ! GT              [ shift and go to state 19 ]
  ! LT              [ shift and go to state 20 ]
  ! GE              [ shift and go to state 21 ]
  ! LE              [ shift and go to state 22 ]
  ! NE              [ shift and go to state 23 ]


state 27

    (7) expression -> expression MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    PLUS            reduce using rule 7 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 7 (expression -> expression MINUS expression .)
    EQ              reduce using rule 7 (expression -> expression MINUS expression .)
    GT              reduce using rule 7 (expression -> expression MINUS expression .)
    LT              reduce using rule 7 (expression -> expression MINUS expression .)
    GE              reduce using rule 7 (expression -> expression MINUS expression .)
    LE              reduce using rule 7 (expression -> expression MINUS expression .)
    NE              reduce using rule 7 (expression -> expression MINUS expression .)
    $end            reduce using rule 7 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17

  ! TIMES           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EQ              [ shift and go to state 18 ]
  ! GT              [ shift and go to state 19 ]
  ! LT              [ shift and go to state 20 ]
  ! GE              [ shift and go to state 21 ]
  ! LE              [ shift and go to state 22 ]
  ! NE              [ shift and go to state 23 ]


state 28

    (8) expression -> expression TIMES expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    PLUS            reduce using rule 8 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 8 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 8 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 8 (expression -> expression TIMES expression .)
    EQ              reduce using rule 8 (expression -> expression TIMES expression .)
    GT              reduce using rule 8 (expression -> expression TIMES expression .)
    LT              reduce using rule 8 (expression -> expression TIMES expression .)
    GE              reduce using rule 8 (expression -> expression TIMES expression .)
    LE              reduce using rule 8 (expression -> expression TIMES expression .)
    NE              reduce using rule 8 (expression -> expression TIMES expression .)
    $end            reduce using rule 8 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 8 (expression -> expression TIMES expression .)
    POWER           shift and go to state 17

  ! POWER           [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! TIMES           [ shift and go to state 15 ]
  ! DIVIDE          [ shift and go to state 16 ]
  ! EQ              [ shift and go to state 18 ]
  ! GT              [ shift and go to state 19 ]
  ! LT              [ shift and go to state 20 ]
  ! GE              [ shift and go to state 21 ]
  ! LE              [ shift and go to state 22 ]
  ! NE              [ shift and go to state 23 ]


state 29

    (9) expression -> expression DIVIDE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    PLUS            reduce using rule 9 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 9 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 9 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 9 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 9 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 9 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 9 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 9 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 9 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 9 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 9 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 9 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 17

  ! POWER           [ reduce using rule 9 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! TIMES           [ shift and go to state 15 ]
  ! DIVIDE          [ shift and go to state 16 ]
  ! EQ              [ shift and go to state 18 ]
  ! GT              [ shift and go to state 19 ]
  ! LT              [ shift and go to state 20 ]
  ! GE              [ shift and go to state 21 ]
  ! LE              [ shift and go to state 22 ]
  ! NE              [ shift and go to state 23 ]


state 30

    (10) expression -> expression POWER expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

    PLUS            reduce using rule 10 (expression -> expression POWER expression .)
    MINUS           reduce using rule 10 (expression -> expression POWER expression .)
    TIMES           reduce using rule 10 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 10 (expression -> expression POWER expression .)
    EQ              reduce using rule 10 (expression -> expression POWER expression .)
    GT              reduce using rule 10 (expression -> expression POWER expression .)
    LT              reduce using rule 10 (expression -> expression POWER expression .)
    GE              reduce using rule 10 (expression -> expression POWER expression .)
    LE              reduce using rule 10 (expression -> expression POWER expression .)
    NE              reduce using rule 10 (expression -> expression POWER expression .)
    $end            reduce using rule 10 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 10 (expression -> expression POWER expression .)
    POWER           shift and go to state 17

  ! POWER           [ reduce using rule 10 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! TIMES           [ shift and go to state 15 ]
  ! DIVIDE          [ shift and go to state 16 ]
  ! EQ              [ shift and go to state 18 ]
  ! GT              [ shift and go to state 19 ]
  ! LT              [ shift and go to state 20 ]
  ! GE              [ shift and go to state 21 ]
  ! LE              [ shift and go to state 22 ]
  ! NE              [ shift and go to state 23 ]


state 31

    (14) expression -> expression EQ expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 14 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 14 (expression -> expression EQ expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! POWER           [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 14 (expression -> expression EQ expression .) ]


state 32

    (15) expression -> expression GT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 15 (expression -> expression GT expression .)
    RPAREN          reduce using rule 15 (expression -> expression GT expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! POWER           [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 15 (expression -> expression GT expression .) ]


state 33

    (16) expression -> expression LT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 16 (expression -> expression LT expression .)
    RPAREN          reduce using rule 16 (expression -> expression LT expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! POWER           [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 16 (expression -> expression LT expression .) ]


state 34

    (17) expression -> expression GE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 17 (expression -> expression GE expression .)
    RPAREN          reduce using rule 17 (expression -> expression GE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! POWER           [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 17 (expression -> expression GE expression .) ]


state 35

    (18) expression -> expression LE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 18 (expression -> expression LE expression .)
    RPAREN          reduce using rule 18 (expression -> expression LE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! POWER           [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression LE expression .) ]


state 36

    (19) expression -> expression NE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . POWER expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . LT expression
    (17) expression -> expression . GE expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    $end            reduce using rule 19 (expression -> expression NE expression .)
    RPAREN          reduce using rule 19 (expression -> expression NE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16
    POWER           shift and go to state 17
    EQ              shift and go to state 18
    GT              shift and go to state 19
    LT              shift and go to state 20
    GE              shift and go to state 21
    LE              shift and go to state 22
    NE              shift and go to state 23

  ! PLUS            [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! POWER           [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression NE expression .) ]


state 37

    (11) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 11 (expression -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for POWER in state 31 resolved as shift
WARNING: shift/reduce conflict for EQ in state 31 resolved as shift
WARNING: shift/reduce conflict for GT in state 31 resolved as shift
WARNING: shift/reduce conflict for LT in state 31 resolved as shift
WARNING: shift/reduce conflict for GE in state 31 resolved as shift
WARNING: shift/reduce conflict for LE in state 31 resolved as shift
WARNING: shift/reduce conflict for NE in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for POWER in state 32 resolved as shift
WARNING: shift/reduce conflict for EQ in state 32 resolved as shift
WARNING: shift/reduce conflict for GT in state 32 resolved as shift
WARNING: shift/reduce conflict for LT in state 32 resolved as shift
WARNING: shift/reduce conflict for GE in state 32 resolved as shift
WARNING: shift/reduce conflict for LE in state 32 resolved as shift
WARNING: shift/reduce conflict for NE in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for POWER in state 33 resolved as shift
WARNING: shift/reduce conflict for EQ in state 33 resolved as shift
WARNING: shift/reduce conflict for GT in state 33 resolved as shift
WARNING: shift/reduce conflict for LT in state 33 resolved as shift
WARNING: shift/reduce conflict for GE in state 33 resolved as shift
WARNING: shift/reduce conflict for LE in state 33 resolved as shift
WARNING: shift/reduce conflict for NE in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for POWER in state 34 resolved as shift
WARNING: shift/reduce conflict for EQ in state 34 resolved as shift
WARNING: shift/reduce conflict for GT in state 34 resolved as shift
WARNING: shift/reduce conflict for LT in state 34 resolved as shift
WARNING: shift/reduce conflict for GE in state 34 resolved as shift
WARNING: shift/reduce conflict for LE in state 34 resolved as shift
WARNING: shift/reduce conflict for NE in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for POWER in state 35 resolved as shift
WARNING: shift/reduce conflict for EQ in state 35 resolved as shift
WARNING: shift/reduce conflict for GT in state 35 resolved as shift
WARNING: shift/reduce conflict for LT in state 35 resolved as shift
WARNING: shift/reduce conflict for GE in state 35 resolved as shift
WARNING: shift/reduce conflict for LE in state 35 resolved as shift
WARNING: shift/reduce conflict for NE in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for POWER in state 36 resolved as shift
WARNING: shift/reduce conflict for EQ in state 36 resolved as shift
WARNING: shift/reduce conflict for GT in state 36 resolved as shift
WARNING: shift/reduce conflict for LT in state 36 resolved as shift
WARNING: shift/reduce conflict for GE in state 36 resolved as shift
WARNING: shift/reduce conflict for LE in state 36 resolved as shift
WARNING: shift/reduce conflict for NE in state 36 resolved as shift
